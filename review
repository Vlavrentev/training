>>>>>>>>>> 1
1. Разнести все задачи по отдельным файлам
2. разнести задачи по папкам (по массивам - в одну, и тд)

3. в файле stihi

4. todo в задаче с ростом нет вывода значения роста анона.

5. весь код во всех заданиях обернуть в функции. выполнятся он должен вызовом функции с параметрами.

например
unction isPalindrome($text) {
}

isPalindrome('а роза упала на лапу азору');


>>>>>>>>>> 2

1. придумать для функций нормальные имена. (например nameGenerator() вместо funck)
2. функции должны только создавать строку. выводить ее надо после, при помощи echo.
$string = createPoem($word1, ...);
echo ($string);

3. везде выводится echo лишний раз. это должно уйти после п.2. проверить

4. зачем то 1 папка капсом. сделай красиво.

5. заменить везде инициализацию массивов с array() на []

6. Задание. Разбить класс question на 2 разных. положить их в отдельные файлы.
один класс это тот, кто содержит информацию о вопросе, и больше никакой. Сделать его поля приватными, создавать их через конструктор
все действия выполнять через методы.
второй класс - создает вопросы, распечатывает вопросы, проверяет ответы.

сам скрипт работы положить в отдельный файл

7. по workplay. Наподобие question. Один класс отвечат за работника. один класс отвечает за распечатку таблицы, имея список работников. скрипт работы в отдельном файле.





>>>>>>> 3
1. $winner = ('Человек выйграл комп со счетом '. $hum .' - '. $comp);  тут скобки можно не ставить (убери везде)

2. Разместить все функции в начале файла, а рабочий код который их задействует - внизу (везде)

3. дать переменным все имена по английски. Сразу привыкай. просмотреть все задачи и переименовать в английские аналоги. То же
самое для методов классов

Задание: в задаче credit сделать так, чтобы информацию о банке представлял не массив($homoc = [1.04, 500, 0, "Homocredit"];), а класс
функцию считающую кредит вызвать для всех банков. на вход она должна получать не отдельные параметры, а целый экземпляр.

